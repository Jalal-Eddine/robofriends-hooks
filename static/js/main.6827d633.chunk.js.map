{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","Scroll","props","style","position","top","zIndex","padding","background","border","children","SearchBox","SearchChange","type","placeholder","onChange","App","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","robot","setRobot","useEffect","fetch","then","response","json","users","catch","error","console","filteredRobots","filter","toLowerCase","includes","newRobot","e","target","value","ReactDOM","render","document","getElementById"],"mappings":"iQAeeA,G,MAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACrB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,mBACf,6BACI,4BAAKF,GACL,2BAAIC,OCSTK,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,kBAAC,EAAD,CAAMC,IAAKD,EAAGV,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,MAAOC,GAAIK,EAAOG,GAAGR,UCE/EU,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAACC,SAAU,SAAUC,IAAK,IAAKC,OAAQ,IAAKC,QAAS,OAAQC,WAAY,uEAAwEC,OAAQ,oBAChKP,EAAMQ,WCUJC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,yBAAKpB,UAAU,OACX,2BACAA,UAAU,mCACVqB,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCyCPI,G,MA7CH,WAAM,IAAD,EAEuBC,mBAAS,IAFhC,mBAENC,EAFM,KAEMC,EAFN,OAG6BF,mBAAS,IAHtC,mBAGNG,EAHM,KAGSC,EAHT,OAIaJ,mBAAS,IAJtB,mBAINK,EAJM,KAICC,EAJD,KAUbC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFN,EAASM,MAEZC,OAAM,SAACC,GACRC,QAAQD,MAAMA,QAEnB,IAEHP,qBAAU,WACN,IAAIS,EAAiBX,EAAMY,QAAO,SAAAtC,GAC9B,OACIA,EAAOP,KAAK8C,cAAcC,SAASlB,EAAWiB,kBAGtDd,EAAiBY,KAClB,CAACf,EAAWI,IAEf,IAAMe,EAAWjB,EAEjB,OACI,yBAAK5B,UAAU,MACX,kBAAC,EAAD,KACI,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWoB,aA9BA,SAAC0B,GACpBnB,EAAcmB,EAAEC,OAAOC,WAgCI,KAAftB,EAAoB,kBAAC,EAAD,CAAUtB,OAAS0B,IAAY,kBAAC,EAAD,CAAU1B,OAASyC,O,MCrC1FI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6827d633.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n        return(\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <img alt=\"\" src={`https://robohash.org/${id}?size=200x200`} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return(\r\n                    <Card key={i} name={robots[i].name} email={robots[i].email} id={robots[i].id} />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{position: 'sticky', top: '0', zIndex: '5', padding: '10px', background: 'linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%)', border: '1px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n\r\n// background: linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%);","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({ SearchChange }) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange={SearchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport '../style/App.css';\r\n\r\nconst App = () =>{\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [robot, setRobot] = useState([]);\r\n\r\n    const onSearchChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    useEffect(() =>  {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                setRobot(users)\r\n            })\r\n            .catch((error) => {\r\n            console.error(error);\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let filteredRobots = robot.filter(robots => {\r\n            return(\r\n                robots.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        });\r\n        setSearchResults(filteredRobots);\r\n    }, [searchTerm,robot])\r\n\r\n    const newRobot = searchResults;\r\n\r\n    return(\r\n        <div className=\"tc\">\r\n            <Scroll>\r\n                <h1 className=\"f2\">RoboFriends</h1>\r\n                <SearchBox SearchChange={ onSearchChange }/>\r\n            </Scroll>\r\n                {\r\n                    searchTerm === \"\" ? <CardList robots={ robot }/> : <CardList robots={ newRobot }/>\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}