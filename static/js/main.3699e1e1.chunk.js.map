{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","action.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","Scroll","props","style","position","top","zIndex","padding","background","border","children","SearchBox","SearchChange","type","placeholder","onChange","App","store","useState","searchResults","setSearchResults","text","useSelector","state","searchRobots","searchField","robosUsers","getRobotsReducer","users","dispatch","useDispatch","useEffect","fetch","then","res","json","data","payload","catch","error","filteredRobots","filter","toLowerCase","includes","newRobot","e","setSearchField","target","value","initialState","robotInitialState","pending","logger","createLogger","rootReducer","combineReducers","action","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3699e1e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n        return(\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n                <img alt=\"\" src={`https://robohash.org/${id}?size=200x200`} />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return(\r\n                    <Card key={i} name={robots[i].name} email={robots[i].email} id={robots[i].id} />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{position: 'sticky', top: '0', zIndex: '5', padding: '10px', background: 'linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%)', border: '1px solid black'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n\r\n// background: linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%);","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({ SearchChange }) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange={SearchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../action'\r\nimport '../style/App.css';\r\n\r\nconst App = ({ store }) =>{\r\n\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const text = useSelector(state => state.searchRobots.searchField)\r\n\r\n    const robosUsers = useSelector(state => state.getRobotsReducer.users)\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const onSearchChange = (e) => {\r\n        dispatch(setSearchField(e.target.value))\r\n    };\r\n\r\n    useEffect(() =>  {\r\n        dispatch(requestRobots());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        let filteredRobots = robosUsers.filter(robots => {\r\n            return(\r\n                robots.name.toLowerCase().includes(text.toLowerCase())\r\n            );\r\n        });\r\n        setSearchResults(filteredRobots);\r\n    }, [text,robosUsers])\r\n\r\n    const newRobot = searchResults;\r\n\r\n    return(\r\n        <div className=\"tc\">\r\n            <Scroll>\r\n                <h1 className=\"f2\">RoboFriends</h1>\r\n                <SearchBox SearchChange={ onSearchChange }/>\r\n            </Scroll>\r\n                {\r\n                    text === \"\" ? <CardList robots={ robosUsers }/> : <CardList robots={ newRobot }/>\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\nexport const FETCH_PRODUCTS_PENDING = 'FETCH_PRODUCTS_PENDING';\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\r\nexport const FETCH_PRODUCTS_ERROR = 'FETCH_PRODUCTS_ERROR';\r\n\r\nexport const setSearchField = (text) => {\r\n    return{\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: FETCH_PRODUCTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({ type: FETCH_PRODUCTS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: FETCH_PRODUCTS_ERROR, payload: error }))\r\n}\r\n","import { CHANGE_SEARCH_FIELD, FETCH_PRODUCTS_PENDING, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR } from './action'\r\n\r\nconst initialState = {\r\n    searchField: '',\r\n}\r\n\r\nexport const searchRobots = ( state = initialState , { type, payload } ) => {\r\n    switch(type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return { ...state, \r\n                searchField: payload \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst robotInitialState = {\r\n    pending: false,\r\n    users: [],\r\n    error: null\r\n}\r\n\r\nexport const getRobotsReducer = ( state = robotInitialState, action ) => {\r\n    switch(action.type) {\r\n        case FETCH_PRODUCTS_PENDING: \r\n            return {\r\n                ...state,\r\n                pending: true\r\n            }\r\n        case FETCH_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                users: action.payload\r\n            }\r\n        case FETCH_PRODUCTS_ERROR:\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport './style/index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\nimport { searchRobots,getRobotsReducer } from './reducers';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ searchRobots, getRobotsReducer });\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare, logger));\r\n\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App/>\r\n                </Provider>, \r\n                document.getElementById('root')\r\n                );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}